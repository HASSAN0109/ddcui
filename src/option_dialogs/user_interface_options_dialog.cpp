// user_interface_options_dialog.cpp

// Copyright (C) 2018-3019 Sanford Rockowitz <rockowitz@minsoft.com>
// SPDX-License-Identifier: GPL-2.0-or-later

#include "user_interface_options_dialog.h"

// generated by uic from userInterfaceOptions.ui.ui:
#include "ui_user_interface_options_dialog.h"

#include <assert.h>
#include <QtCore/QDebug>

#include "base/user_interface_options_state.h"
#include "base/ddcui_globals.h"
#include "help/help_dialog.h"


void UserInterfaceOptionsDialog::setCkrChanged(bool required)
{
      _ui->ckrCheckBox->setChecked(required);
}


UserInterfaceOptionsDialog::UserInterfaceOptionsDialog(
           UserInterfaceOptionsState * state,
           QWidget *parent)
    :  QDialog(parent)
    ,  _ui(new Ui::  UserInterfaceOptionsDialog)
    , _state(state)
{
    _cls = metaObject()->className();
    PRINTFCM("Constructor starting");
    // _state = state;
    _ui->setupUi(this);

    setWindowTitle("ddcui - User Interface Options");
    // setUSource(state->ncValuesSource);
    PRINTFCM("Constructor done");
}


UserInterfaceOptionsDialog::~UserInterfaceOptionsDialog()
{
    delete _ui;
}


void UserInterfaceOptionsDialog::on_actionButtonBox_accepted()
{
    bool debugFunc = true;
    bool newCtrlKeyRequired  = _ui->ckrCheckBox->isChecked();
    PRINTFCMF(debugFunc, "Executing. Value read from ckr checkbox; %s", sbool(newCtrlKeyRequired));

    PRINTFCMF(debugFunc, "Calling _state->setControlKey Required(%s)", sbool(newCtrlKeyRequired));

    _state->setControlKeyRequired(newCtrlKeyRequired);

    // no, automatically emitted when dialog accepted, by accept() or done()
    // emit userInterfaceDialog_accepted(_state);  // probably not needed

    PRINTFCMF(debugFunc, "Before calling accept()");
    accept();  // causes accepteed() to be emitted
}





void UserInterfaceOptionsDialog::on_actionButtonBox_helpRequested()
{
    // PRINTFCM();
    QString fn(":/docs/uioptions");
    QFile f(fn);
    f.open(QFile::ReadOnly | QFile::Text);
    QTextStream in(&f);

    QString htmlText = in.readAll();

    // qDebug() << htmlText;

    // doesn't show dialog box
    // HelpDialog2("ddcui Help - Other Options", htmlText, this);

    HelpDialog2* hd = new HelpDialog2(this);
    hd->setText(htmlText);
    hd->setWindowTitle("ddcui Help - User Interface Options");
    hd->show();
}


// Reset
void UserInterfaceOptionsDialog::on_actionButtonBox_clicked(QAbstractButton* button)
{
   if(button== (QAbstractButton*) _ui->actionButtonBox->button(QDialogButtonBox::Reset) ){
      PRINTFCM("Reset");

      // THIS IS NONSENSE, IF RESETTING THEN STATE CANT CHANGE!
      bool ckrOld = _state->controlKeyRequired;
      _state->controlKeyRequired = UserInterfaceOptionsState::CkrDefault;
      // on_buttonBox_accepted();  // do not actually change until OK

      // NcValuesSource oldsrc = _state->ncValuesSource;
      //  _state->ncValuesSource = OtherOptionsState::DefaultNcValuesSource;
      //   setUiSource(_state->ncValuesSource);
      if (_state->controlKeyRequired !=ckrOld) {
             emit ckrChanged(_state->controlKeyRequired);
      }
   }
}

